// <auto-generated />
using FirstTask.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FirstTask.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210723215125_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FirstTask.Models.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloggerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            BloggerName = "Eles"
                        });
                });

            modelBuilder.Entity("FirstTask.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("VideoId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CommentText = "' Всем привет, с вами Элез '  Мне больше нравился ^_^ ",
                            Dislikes = 15,
                            Likes = 159,
                            VideoId = 1
                        },
                        new
                        {
                            id = 2,
                            CommentText = "6 лет назад... и тут рекомендация",
                            Dislikes = 1,
                            Likes = 10,
                            VideoId = 1
                        },
                        new
                        {
                            id = 3,
                            CommentText = "Мне кажется,Элез бы отлично сыграл Джокера. Пугающе. Именно.",
                            Dislikes = 28,
                            Likes = 228000000,
                            VideoId = 2
                        },
                        new
                        {
                            id = 4,
                            CommentText = "у меня мурашки по коже когда он разговаривает",
                            Dislikes = 0,
                            Likes = 8,
                            VideoId = 2
                        });
                });

            modelBuilder.Entity("FirstTask.Models.Video", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("BlogId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            BlogId = 1,
                            Dislikes = 5672,
                            Likes = 30764,
                            Url = "https://www.youtube.com/watch?v=jgELCkPJ4LQ",
                            VideoName = "Warface: НАЧАТЬ С НУЛЯ?",
                            Views = 1791927
                        },
                        new
                        {
                            id = 2,
                            BlogId = 1,
                            Dislikes = 5020,
                            Likes = 19809,
                            Url = "https://www.youtube.com/watch?v=6vshj3lPUx0",
                            VideoName = "Intro для канала Элез",
                            Views = 4516796
                        });
                });

            modelBuilder.Entity("FirstTask.Models.Comment", b =>
                {
                    b.HasOne("FirstTask.Models.Video", "Video")
                        .WithMany("CommentsList")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("FirstTask.Models.Video", b =>
                {
                    b.HasOne("FirstTask.Models.Blog", "Blog")
                        .WithMany("VideosList")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("FirstTask.Models.Blog", b =>
                {
                    b.Navigation("VideosList");
                });

            modelBuilder.Entity("FirstTask.Models.Video", b =>
                {
                    b.Navigation("CommentsList");
                });
#pragma warning restore 612, 618
        }
    }
}
