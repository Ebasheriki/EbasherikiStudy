// <auto-generated />
using EFKinopoisk.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFKinopoisk.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFKinopoisk.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Biba"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boba"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ebanko"
                        },
                        new
                        {
                            Id = 4,
                            Name = "KolaCation"
                        });
                });

            modelBuilder.Entity("EFKinopoisk.Models.ActorFilm", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("ActorFilms");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            FilmId = 1,
                            Id = 0
                        },
                        new
                        {
                            ActorId = 1,
                            FilmId = 3,
                            Id = 0
                        },
                        new
                        {
                            ActorId = 2,
                            FilmId = 1,
                            Id = 0
                        },
                        new
                        {
                            ActorId = 2,
                            FilmId = 3,
                            Id = 0
                        },
                        new
                        {
                            ActorId = 3,
                            FilmId = 2,
                            Id = 0
                        },
                        new
                        {
                            ActorId = 3,
                            FilmId = 3,
                            Id = 0
                        });
                });

            modelBuilder.Entity("EFKinopoisk.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dva dolboyoba"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ya ebu sobak"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Super crossover"
                        });
                });

            modelBuilder.Entity("EFKinopoisk.Models.ActorFilm", b =>
                {
                    b.HasOne("EFKinopoisk.Models.Actor", "Actor")
                        .WithMany("ActorFilms")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFKinopoisk.Models.Film", "Film")
                        .WithMany("ActorFilms")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("EFKinopoisk.Models.Actor", b =>
                {
                    b.Navigation("ActorFilms");
                });

            modelBuilder.Entity("EFKinopoisk.Models.Film", b =>
                {
                    b.Navigation("ActorFilms");
                });
#pragma warning restore 612, 618
        }
    }
}
